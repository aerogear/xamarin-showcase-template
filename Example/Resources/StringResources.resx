<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>AeroGear Xamarin Showcase</value>
  </data>
  <data name="NavHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="NavSecurity" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="NavAuth" xml:space="preserve">
    <value>Authentication</value>
  </data>
  <data name="HomeWelcome" xml:space="preserve">
    <value>&lt;center&gt;This app demonstrates how to use the AeroGear Mobile services, backed by OpenShift to perform a wide range of common mobile tasks such as Identity Management, Device Security, Metrics Capture, Push Notifications and more.&lt;/center&gt;
    &lt;br&gt;
    </value>
  </data>
  <data name="FurtherInformation" xml:space="preserve">
    <value>            &lt;center&gt;For further information, visit &lt;span style="color: #2e6980"&gt;&lt;a href="http://www.aerogear.org" &gt;www.aerogear.org&lt;/a&gt;&lt;/span&gt;&lt;/center&gt;
    </value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="AeroGear" xml:space="preserve">
    <value>AeroGear</value>
  </data>
  <data name="NavCertPinning" xml:space="preserve">
    <value>Cert Pinning</value>
  </data>
  <data name="NavDeviceProfileInfo" xml:space="preserve">
    <value>Device Profile Info</value>
  </data>
  <data name="NavDeviceTrust" xml:space="preserve">
    <value>Device Trust</value>
  </data>
  <data name="NavDocumentation" xml:space="preserve">
    <value>Documentation</value>
  </data>
  <data name="NavIdtMgmt" xml:space="preserve">
    <value>Identity Management</value>
  </data>
  <data name="NavMetrics" xml:space="preserve">
    <value>Metrics</value>
  </data>
  <data name="NavPush" xml:space="preserve">
    <value>Push Notifications</value>
  </data>
  <data name="NavPushMsg" xml:space="preserve">
    <value>Push Messages</value>
  </data>
  <data name="NavSecStorage" xml:space="preserve">
    <value>Secure Storage</value>
  </data>
  <data name="NavTrustCheckInfo" xml:space="preserve">
    <value>Trust Check Info</value>
  </data>
  <data name="NavDevSec" xml:space="preserve">
    <value>Device Security</value>
  </data>
  <data name="UnderConstruction" xml:space="preserve">
    <value>&lt;center&gt;This feature is currently under construction for this platform.
&lt;br&gt;&lt;br&gt;
If you would like to get involved in this work, please check out our community contribution page.&lt;br&gt;&lt;span style="color: #2e6980"&gt;
 &lt;br&gt;&lt;a href="http://www.aerogear.org/community#guides"&gt;www.aerogear.org/community#guides&lt;/a&gt;&lt;/span&gt;&lt;/center&gt;
    </value>
  </data>
  <data name="NavSSO" xml:space="preserve">
    <value>SSO</value>
  </data>
  <data name="UnderConstructionTitle" xml:space="preserve">
    <value>Under Construction</value>
  </data>
  <data name="button.close.caption" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="button.showdocs.caption" xml:space="preserve">
    <value>Show Documentation</value>
  </data>
  <data name="dialog.error.title" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="dialog.notconfigured.title" xml:space="preserve">
    <value>Feature Not Configured</value>
  </data>
  <data name="dialog.notconfigured.message" xml:space="preserve">
    <value>The service {0} does not have a configuration in mobile-services.json. Refer to the documentation for instructions on how to configure this service.</value>
  </data>
  <data name="service.auth.name" xml:space="preserve">
    <value>identity management</value>
  </data>
  <data name="service.auth.authentication.failed" xml:space="preserve">
    <value>Authentication Failed</value>
  </data>
  <data name="idm.doc.link" xml:space="preserve">
    <value>https://docs.aerogear.org/aerogear/latest/keycloak/index.html#nochrome</value>
  </data>
  <data name="idm.sso.doc.link" xml:space="preserve">
    <value>https://docs.aerogear.org/aerogear/latest/keycloak/index.html?sso=1#nochrome</value>
  </data>
  <data name="device.security.doc.link" xml:space="preserve">
    <value>https://docs.aerogear.org/aerogear/latest/security/index.html#nochrome</value>
  </data>
  <data name="push.doc.link" xml:space="preserve">
    <value>https://docs.aerogear.org/aerogear/latest/push/index.html#nochrome</value>
  </data>
  <data name="metrics.doc.link" xml:space="preserve">
    <value>https://docs.aerogear.org/aerogear/latest/metrics/index.html#nochrome</value>
  </data>
  <data name="auth.Login" xml:space="preserve">
    <value>Authenticate</value>
  </data>
  <data name="auth.Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="auth.userDetails.FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="auth.userDetails.Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="auth.userDetails.Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="auth.userDetails.AssignedRoles" xml:space="preserve">
    <value>Assigned Roles</value>
  </data>
  <data name="auth.userDetails.Otp2FAEnabled" xml:space="preserve">
    <value>OTP 2FA Enabled</value>
  </data>
  <data name="auth.userDetails.EmailVerified" xml:space="preserve">
    <value>Email Verified</value>
  </data>
  <data name="DeviceSecurityDesc" xml:space="preserve">
    <value>The Device Security service allows you to easily configure and manage device security, and trust checks for your mobile app.
&lt;br/&gt;&lt;br/&gt;
&lt;ul&gt;
&lt;li&gt;Perform a range of device trust checks on the mobile device, such as checking if the device is rooted, and allows you take proactive action based on the results&lt;/li&gt;
&lt;li&gt;Distribute SSL certificates with a mobile app to create a direct chain of trust (certificate pinning)&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;</value>
  </data>
  <data name="IdtManagementDesc" xml:space="preserve">
    <value>The Identity Management service allows you to add authentication and authorization to your mobile app.
&lt;br/&gt;&lt;br/&gt;
&lt;ul&gt;
&lt;li&gt;Secure your mobile app using the industry standard OpenID Connect protocol&lt;/li&gt;
&lt;li&gt;Add access control to your app based on user’s group membership&lt;/li&gt;
&lt;li&gt;Easily implement SSO, multi factor authentication and Social Login support&lt;/li&gt;
&lt;li&gt;Back end support for identity brokering and user federation&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;</value>
  </data>
  <data name="MobileMetricsDesc" xml:space="preserve">
    <value>The Mobile Metrics service allows you gather metrics on mobile apps, device versions, device security checks and back-end mobile service usage.
&lt;br/&gt;&lt;br/&gt;
&lt;ul&gt;
&lt;li&gt;Monitor usage by version of mobile app, platform and SDK&lt;/li&gt;
&lt;li&gt;Monitor interactions with the Identity Management service&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;</value>
  </data>
  <data name="PushNotificationsDesc" xml:space="preserve">
    <value>The Push Notifications service allows you send native push notifications to different mobile operating systems.
&lt;br/&gt;&lt;br/&gt;
&lt;ul&gt;
&lt;li&gt;Code once and send push notifications to iOS and Android&lt;/li&gt;
&lt;li&gt;Push notifications to defined groups&lt;/li&gt;
&lt;li&gt;Push notifications to either iOS only or Android only&lt;/li&gt;
&lt;li&gt;Push notifications to different variants of a mobile app&lt;/li&gt;
&lt;li&gt;Push notifications from different back-end apps to the same mobile app&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;            
</value>
  </data>
  <data name="NavSubheader" xml:space="preserve">
    <value>aerogear.org</value>
  </data>
</root>