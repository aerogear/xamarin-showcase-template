using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using Example.Models;
using Example.Resources;
using Example.Utils;
using Example.ViewModels.Base;
using Example.Views.Pages;
using static Example.Views.Pages.LandingPage;

namespace Example.ViewModels
{
    public enum NavigationItemIds 
    { 
        IDMGT, 
        IDMGT_DOC, 
        AUTH, 
        SSO, 
        DEV_SEC, 
        DEV_SEC_DOC, 
        DEV_TRUST, 
        SEC_STORAGE, 
        CERT_PINNING, 
        PUSH, 
        PUSH_DOC, 
        PUSH_REG, 
        PUSH_MSG, 
        METRICS, 
        METRICS_DIC, 
        DEV_PROF_INFO, 
        TRUST_CHECK_INFO 
    };

    public class DrawerMenuVM : BaseVM
    {
        public Dictionary<NavigationItemIds, NavigationItem> Items = new Dictionary<NavigationItemIds, NavigationItem>();
        public ObservableCollection<NavigationItem> NavigationItems { get; set; }

<<<<<<< HEAD
        public DrawerMenuVM() => NavigationItems = new ObservableCollection<NavigationItem>(new[]
            {
                NavigationItem.HOME_PAGE,
            new DescriptionNavigationItem { Id=1, Title=StringResources.NavIdtMgmt,Icon=ResourceUtils.GetSvg("ic_account_circle"),TextContent=StringResources.IdtManagementDesc+StringResources.FurtherInformation},
                new WebNavigationItem { Id=10, Title=StringResources.NavDocumentation,SubItem=true, Source=StringResources.idm_doc_link},
                new NavigationItem { Id = 11, Title = StringResources.NavAuth, TargetType=typeof(AuthPage),SubItem=true},
                new WebNavigationItem { Id=12, Title=StringResources.NavSSO,SubItem=true, Source=StringResources.idm_sso_doc_link},
            new DescriptionNavigationItem { Id=2, Title=StringResources.NavDevSec,Icon=ResourceUtils.GetSvg("ic_security"),TextContent=StringResources.DeviceSecurityDesc+StringResources.FurtherInformation },
                new WebNavigationItem { Id=20, Title=StringResources.NavDocumentation,SubItem=true, Source=StringResources.device_security_doc_link},
                new NavigationItem {Id = 21, Title = StringResources.NavDeviceTrust, TargetType=typeof(SecurityCheckPage), SubItem=true },
                CreateUnderConstructionItem(22, StringResources.NavSecStorage),
                CreateUnderConstructionItem(23, StringResources.NavCertPinning),
            new DescriptionNavigationItem { Id=3, Title=StringResources.NavPush,Icon=ResourceUtils.GetSvg("ic_notifications_active"),TextContent=StringResources.PushNotificationsDesc+StringResources.FurtherInformation},
                new WebNavigationItem { Id = 31, Title =StringResources.NavDocumentation, SubItem=true, Source=StringResources.push_doc_link
},
                CreateUnderConstructionItem(32, StringResources.NavDevReg),
                CreateUnderConstructionItem(33, StringResources.NavPushMsg),
            new DescriptionNavigationItem { Id=4, Title=StringResources.NavMetrics,Icon=ResourceUtils.GetSvg("ic_insert_chart"),TextContent=StringResources.MobileMetricsDesc+StringResources.FurtherInformation },
                new WebNavigationItem { Id = 41, Title =StringResources.NavDocumentation, SubItem=true, Source=StringResources.metrics_doc_link},
                CreateUnderConstructionItem(42, StringResources.NavDeviceProfileInfo),
                CreateUnderConstructionItem(43, StringResources.NavTrustCheckInfo)

            });

        /// <summary>
        /// Creates under construction navigation item.
        /// </summary>
        /// <param name="id"></param> id of the neavigation item.
        /// <param name="title"></param> title of the navigation item
        /// <returns></returns>
        private NavigationItem CreateUnderConstructionItem(int id, string title) => new DescriptionNavigationItem { Id = id, Title = title, SubItem = true, Subtitle = StringResources.UnderConstructionTitle, TextContent = StringResources.UnderConstruction };
=======
        public DrawerMenuVM()
        {
            Items[NavigationItemIds.IDMGT] = new NavigationItem { Id = (int)NavigationItemIds.IDMGT, Title = StringResources.NavIdtMgmt, Icon = ResourceUtils.GetSvg("ic_account_circle") };
            Items[NavigationItemIds.IDMGT_DOC] = new WebNavigationItem { Id = (int)NavigationItemIds.IDMGT_DOC, Title = StringResources.NavDocumentation, SubItem = true, Source = StringResources.idm_doc_link };
            Items[NavigationItemIds.AUTH] = new AuthNavigationItem { Id = (int)NavigationItemIds.AUTH, Title = StringResources.NavAuth, TargetType = typeof(AuthPage), SubItem = true };
            Items[NavigationItemIds.SSO] = new WebNavigationItem { Id = (int)NavigationItemIds.SSO, Title = StringResources.NavSSO, SubItem = true, Source = StringResources.idm_sso_doc_link };
            Items[NavigationItemIds.DEV_SEC] = new NavigationItem { Id = (int)NavigationItemIds.DEV_SEC, Title = StringResources.NavDevSec, Icon = ResourceUtils.GetSvg("ic_security") };
            Items[NavigationItemIds.DEV_SEC_DOC] = new WebNavigationItem { Id = (int)NavigationItemIds.DEV_SEC_DOC, Title = StringResources.NavDocumentation, SubItem = true, Source = StringResources.device_security_doc_link };
            Items[NavigationItemIds.DEV_TRUST] = new NavigationItem { Id = (int)NavigationItemIds.DEV_TRUST, Title = StringResources.NavDeviceTrust, TargetType = typeof(SecurityCheckPage), SubItem = true };
            Items[NavigationItemIds.SEC_STORAGE] = new NavigationItem { Id = (int)NavigationItemIds.SEC_STORAGE, Title = StringResources.NavSecStorage, TargetType = typeof(UnderConstruction), SubItem = true };
            Items[NavigationItemIds.CERT_PINNING] = new NavigationItem { Id = (int)NavigationItemIds.CERT_PINNING, Title = StringResources.NavCertPinning, TargetType = typeof(UnderConstruction), SubItem = true };
            Items[NavigationItemIds.PUSH] = new NavigationItem { Id = (int)NavigationItemIds.PUSH, Title = StringResources.NavPush, Icon = ResourceUtils.GetSvg("ic_notifications_active") };
            Items[NavigationItemIds.PUSH_DOC] = new WebNavigationItem { Id = (int)NavigationItemIds.PUSH_DOC, Title = StringResources.NavDocumentation, SubItem = true, Source = StringResources.push_doc_link };
            Items[NavigationItemIds.PUSH_REG] = new NavigationItem { Id = (int)NavigationItemIds.PUSH_REG, Title = StringResources.NavDevReg, TargetType = typeof(UnderConstruction), SubItem = true };
            Items[NavigationItemIds.PUSH_MSG] = new NavigationItem { Id = (int)NavigationItemIds.PUSH_MSG, Title = StringResources.NavPushMsg, TargetType = typeof(UnderConstruction), SubItem = true };
            Items[NavigationItemIds.METRICS] = new NavigationItem { Id = (int)NavigationItemIds.METRICS, Title = StringResources.NavMetrics, Icon = ResourceUtils.GetSvg("ic_insert_chart") };
            Items[NavigationItemIds.METRICS_DIC] = new WebNavigationItem { Id = (int)NavigationItemIds.METRICS_DIC, Title = StringResources.NavDocumentation, SubItem = true, Source = StringResources.metrics_doc_link };
            Items[NavigationItemIds.DEV_PROF_INFO] = new NavigationItem { Id = (int)NavigationItemIds.DEV_PROF_INFO, Title = StringResources.NavDeviceProfileInfo, TargetType = typeof(UnderConstruction), SubItem = true };
            Items[NavigationItemIds.TRUST_CHECK_INFO] = new NavigationItem { Id = (int)NavigationItemIds.TRUST_CHECK_INFO, Title = StringResources.NavTrustCheckInfo, TargetType = typeof(UnderConstruction), SubItem = true };

            NavigationItems = new ObservableCollection<NavigationItem>(Items.Values);
        }
>>>>>>> Added choice to see documentation if configuration for a service is missing
    }
}
